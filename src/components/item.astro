---
import '../assets/item.css'
import 'prismjs/themes/prism.css'
import dayjs from '../lib/dayjs'
import { getEnv } from '../lib/env'
import voidFile from '../assets/void.png'

const locale = getEnv(import.meta.env, Astro, 'LOCALE')
const timezone = getEnv(import.meta.env, Astro, 'TIMEZONE')

locale && dayjs.locale(locale)

const { SITE_URL } = Astro.locals
const { post, isItem, channel: channelInfo } = Astro.props

const channel = getEnv(import.meta.env, Astro, 'CHANNEL')
const COMMENTS = getEnv(import.meta.env, Astro, 'COMMENTS')
const staticProxy = getEnv(import.meta.env, Astro, 'STATIC_PROXY') ?? '/static/'

const avatarSrc = channelInfo?.avatar?.startsWith('http')
  ? `${staticProxy}${channelInfo?.avatar}`
  : (channelInfo?.avatar ?? voidFile.src)
const channelName = channelInfo?.title ?? getEnv(import.meta.env, Astro, 'CHANNEL_NAME') ?? channel ?? 'Channel'

const datetime = dayjs(post.datetime).tz(timezone)
const dateLabel = datetime.format('YYYY年MM月DD日 HH:mm dddd')
const timeTitle = datetime.format('YYYY/MM/DD HH:mm')
const timeago = datetime.isBefore(dayjs().subtract(1, 'w')) ? datetime.format('HH:mm · ll · ddd') : datetime.fromNow()
---

<div class="item py-6 border-b border-[var(--border-color)] first:pt-0 last:border-b-0" style={{ 'view-transition-name': `post-${post.id}` }}>
  <div class="moment flex items-start gap-4">
    <figure class="moment-avatar m-0 flex-none">
      <img src={avatarSrc} alt={channelName} loading={isItem ? 'eager' : 'lazy'} class="w-14 h-14 rounded-xl object-cover" />
    </figure>
    <div class="moment-content flex-1 flex flex-col gap-3">
      <div class="moment-header flex items-center gap-2 mb-1">
        <span class="moment-author text-base font-semibold text-[var(--foreground-color)]">{channelName}</span>
      </div>
      {post.content.length > 0 && <div class={`moment-text content prose prose-green max-w-none m-0 text-sm leading-relaxed text-[var(--foreground-color)] break-words`} set:html={post.content} />}
      <!-- {
        post.tags.length > 0 && (
          <div class="moment-tags flex gap-2 flex-wrap mt-1">
            {post.tags.map((tag) => (
              <a href={`/search/%23${tag}`} title={tag} class="moment-tag bg-gray-100 text-[var(--link-color)] rounded-full px-3 py-1 text-xs no-underline transition-all duration-200 hover:bg-[rgba(7,193,96,0.12)] hover:text-[var(--highlight-color)] hover:no-underline">
                #{tag}
              </a>
            ))}
          </div>
        )
      } -->

      <div class="moment-footer flex items-center gap-2 mt-3 justify-start">
        <a href={`${SITE_URL}posts/${post.id}`} title={timeago} class="moment-time-link text-[var(--secondary-color)] text-xs no-underline inline-flex items-center py-1 hover:text-[var(--highlight-color)]">
          <time datetime={post.datetime} title={timeTitle} class="moment-time text-sm text-[var(--secondary-color)] font-normal">{dateLabel}</time>
        </a>
      </div>

      {
        COMMENTS && isItem && (
          <div class="moment-comments mt-4 pt-3 border-t border-dashed border-[var(--border-color)]">
            <script
              is:inline
              async
              src="https://telegram.org/js/telegram-widget.js"
              data-telegram-discussion={`${channel}/${post.id}`}
              data-comments-limit="50"
              data-colorful="1"
              data-color="454545"
            />
          </div>
        )
      }
    </div>
  </div>
</div>
